export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"declarations.js","sourceRoot":"","sources":["../../../../projects/ngx-apple-mapkit/src/lib/declarations.ts"],"names":[],"mappings":"","sourcesContent":["import {mapkit} from \"./mapkit\";\r\n\r\nexport declare interface CoordinatesInterface {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\nexport declare interface CoordinatesAnimatedInterface {\r\n    latitude: number;\r\n    longitude: number;\r\n    animate?: boolean;\r\n}\r\n\r\nexport declare interface SpanInterface {\r\n    from: number;\r\n    to: number;\r\n}\r\n\r\nexport declare interface RegionInterface {\r\n    center: CoordinatesInterface;\r\n    span?: SpanInterface;\r\n}\r\n\r\nexport declare interface RegionInterfaceAnimated {\r\n    center: CoordinatesInterface;\r\n    span?: SpanInterface;\r\n    animate?: boolean;\r\n}\r\n\r\nexport declare interface RotationAnimated {\r\n    rotation: number;\r\n    animate?: boolean;\r\n}\r\n\r\nexport declare interface PaddingInterface {\r\n    top?: number;\r\n    left?: number;\r\n    right?: number;\r\n    bottom?: number;\r\n}\r\n\r\nexport declare interface MapConstructorOptions {\r\n    // visibleMapRect: any;\r\n    region?: RegionInterface;\r\n    center?: CoordinatesInterface;\r\n    rotation?: number;\r\n    tintColor?: string;\r\n    colorScheme?: 'light' | 'dark';\r\n    mapType?: 'mutedStandard' | 'standard' | 'satellite' | 'hybrid';\r\n    padding?: PaddingInterface;\r\n    showsMapTypeControl?: boolean;\r\n    isRotationEnabled?: boolean;\r\n    showsCompass?: 'adaptive' | 'hidden' | 'visible';\r\n    isZoomEnabled?: boolean;\r\n    showsZoomControl?: boolean;\r\n    isScrollEnabled?: boolean;\r\n    showsScale?: 'adaptive' | 'hidden' | 'visible';\r\n    showsUserLocation?: boolean;\r\n    tracksUserLocation?: boolean;\r\n    showsUserLocationControl?: boolean;\r\n    // isRotationAvailable?: boolean;\r\n    // setCenterAnimated?: CoordinatesAnimatedInterface;\r\n    // setRegionAnimated?: RegionInterfaceAnimated;\r\n    // setRotationAnimated?: RotationAnimated;\r\n    // showsPointsOfInterest?: boolean;\r\n}\r\n\r\n\r\nexport declare interface MapKitRegionSpan {\r\n    latitudeDelta: number;\r\n    longitudeDelta: number;\r\n}\r\n\r\nexport declare interface MapKitRegion {\r\n    center: CoordinatesInterface;\r\n    span: MapKitRegionSpan;\r\n}\r\n\r\nexport declare interface MapKitGetCameraZoomRange {\r\n    minCameraDistance: number;\r\n    maxCameraDistance: number;\r\n}\r\n\r\nexport declare type MapKitItem = mapkit.Annotation | mapkit.Overlay;\r\nexport declare type MapKitAnnotation = mapkit.Annotation;\r\n\r\nexport declare interface MapKitGetSelectedAnnotations extends mapkit.Annotation {\r\n    _impl: any;\r\n}\r\n\r\nexport declare interface MapKitLoaded {\r\n    key: number;\r\n    map: mapkit.Map;\r\n\r\n    // addEventListener: (type: string, cb: (...any: any) => any, context: any) => any;\r\n    addEventListener<T, K extends keyof mapkit.MapEvents<this>>(\r\n        type: K,\r\n        listener: (this: T, event: mapkit.MapEvents<this>[K]) => void,\r\n        thisObject?: T\r\n    ): void;\r\n\r\n    isRotationAvailable: () => boolean;\r\n    isRotationEnabled: () => boolean;\r\n    isScrollEnabled: () => boolean;\r\n    isZoomEnabled: () => boolean;\r\n    getCenter: () => CoordinatesInterface;\r\n    setCenterAnimated: (latitude: number, longitude: number, animate?: boolean) => void;\r\n    getRegion: () => MapKitRegion;\r\n    setRegionAnimated: (center: CoordinatesInterface, span?: SpanInterface, animate?: boolean) => void;\r\n    getRotation: () => number;\r\n    setRotationAnimated: (degrees: number, animate?: boolean) => void;\r\n    getCameraDistance: () => number;\r\n    setCameraDistanceAnimated: (distance: number, animate?: boolean) => void;\r\n    getCameraZoomRange: () => MapKitGetCameraZoomRange;\r\n    setCameraZoomRangeAnimated: (minCameraDistance: number, maxCameraDistance: number, animate?: boolean) => void;\r\n    getColorScheme: () => SchemeString | string;\r\n    setColorScheme: (scheme: SchemeString) => void;\r\n    getDistances: () => DistancesString;\r\n    setDistances: (distance: DistancesString) => void;\r\n    getMapType: () => MapTypeString;\r\n    setMapType: (type: MapTypeString) => void;\r\n    getPadding: () => PaddingInterface;\r\n    setPadding: (padding: PaddingInterface) => void;\r\n    getShowsMapTypeControl: () => boolean;\r\n    setShowsMapTypeControl: (value: boolean) => void;\r\n    getShowsZoomControl: () => boolean;\r\n    setShowsZoomControl: (value: boolean) => void;\r\n    getShowsUserLocationControl: () => boolean;\r\n    setShowsUserLocationControl: (value: boolean) => void;\r\n    getShowsPointsOfInterest: () => boolean;\r\n    setShowsPointsOfInterest: (value: boolean) => void;\r\n    getShowsScale: () => ShowsScaleString;\r\n    setShowsScale: (padding: ShowsScaleString) => void;\r\n    getTintColor: () => string;\r\n    setTintColor: (value: string) => void;\r\n    showItems: (items: MapKitItem | MapKitItem[], mapShowItemOptions?: MapShowItemOptionsInterface) => void;\r\n    getAnnotations: () => Promise<MapKitAnnotation[]>;\r\n    getSelectedAnnotations: () => MapKitGetSelectedAnnotations;\r\n    showsCompass: MapKitCompass;\r\n    showsMapTypeControl: boolean;\r\n    showsZoomControl: boolean;\r\n    showsUserLocationControl: boolean;\r\n    showsPointsOfInterest: boolean;\r\n    tintColor: string;\r\n    zoom: number;\r\n}\r\n\r\nexport declare interface MapKitInitOptions {\r\n    language?: string;\r\n    callback?: any;\r\n    JWT: string;\r\n}\r\n\r\nexport declare type DistancesString = 'metric' | 'imperial' | 'adaptive';\r\nexport declare type SchemeString = 'dark' | 'light';\r\nexport declare type MapTypeString = 'standard' | 'mutedStandard' | 'hybrid' | 'satellite';\r\nexport declare type ShowsScaleString = 'visible' | 'hidden';\r\nexport declare type MapKitCompass = 'hidden' | 'adaptive' | 'visible';\r\n\r\nexport declare interface MapShowItemOptionsInterface {\r\n    animate?: boolean;\r\n    padding?: PaddingInterface;\r\n    span?: SpanInterface;\r\n}\r\n\r\nexport declare interface DOMPointInterface {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport declare interface SizeInterface {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport declare interface AnnotationConstructorOptionsInterface {\r\n    data?: object;\r\n    title?: string;\r\n    subtitle?: string;\r\n    // anchorOffset?: DOMPointInterface;\r\n    appearanceAnimation?: string;\r\n    displayPriority?: number;\r\n    padding?: PaddingInterface;\r\n    size?: SizeInterface;\r\n    visible?: boolean;\r\n    animates?: boolean;\r\n    draggable?: boolean;\r\n    enabled?: boolean;\r\n    selected?: boolean;\r\n    callout?: boolean;\r\n    calloutEnabled?: boolean;\r\n    // calloutOffset?: DOMPointInterface;\r\n    clusteringIdentifier?: string;\r\n    collisionMode?: 'rectangle' | 'circle';\r\n    accessibilityLabel?: string;\r\n    color?: string;\r\n    glyphText?: string;\r\n    glyphColor?: string;\r\n    glyphImage?: string;\r\n    selectedGlyphImage?: string;\r\n}\r\n\r\nexport declare interface SearchInterface {\r\n    language?: string;\r\n    getUserLocation?: boolean;\r\n    coordinate?: CoordinatesInterface;\r\n    region?: RegionInterface;\r\n}\r\n\r\nexport declare interface GeocoderConstructorOptionsInterface {\r\n    language?: string;\r\n    getsUserLocation?: boolean;\r\n}\r\n\r\nexport declare interface GeocoderReverseLookupOptionsInterface {\r\n    language?: string;\r\n}\r\n"]}